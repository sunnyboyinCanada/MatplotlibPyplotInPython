improt numpy as np
arr = np.array([[1,2,3,4], [5,6,7,8]])
print(arr.shape)

import numpy as np
arr = np.array([1,2,3,4], ndmin = 5)
print(arr)
print('shape of array : ', arr.shape)

import numpy as np
arr = np.array([1,2,3,4,5,6,7,8,9,10,11,12])
newarr = arr.reshape(2,3,2)
print(newarr)

import numpy as np
arr = np.array([1,2,3,4,5,6,7,8])
newarr = arr.reshape(2,2,-1)
print(newarr)

import numpy as np
arr = np.array([1,2,3], [4,5,6]])
newarr = arr.reshape(-1)
print(newarr)

import numpy as np
arr = np.array([[1,2,3], [4,5,6]])
for x in arr:
	print(x)

import numpy as np
arr = np.array([[[1,2,3],[4,5,6]], [[7,8,9],[10,11,12]]])
for x in arr:
	print("x represents the 2-D array:")
	print(x)

import numpy as np
arr = np.array([1,2,3])
for x in np.nditer(arr, flags = ['buffered'], op_dtypes=['S']):
print(x)

import numpy as np
arr = np.array([[1,2,3,4],[5,6,7,8]])
for x in np.nditer(arr[:, ::2]):
	print(x)

import numpy as np
arr = np.array([[1,2,3,4],[5,6,7,8]])

for idx, x in np.ndenumerate(arr):
	print(idx, x)

import numpy as np

arr1 = np.array([1,2,3])
arr2 = np.array([4,5,6])
arr = np.concatenate((arr1,arr2))
print(arr)

import numpy as np

arr1 = np.array([1,2],[3,4])
arr2 = np.array([5,6],[7,8])
arr = np.concatenate((arr1,arr2), axis = 1)
print(arr)

import numpy as np

arr1 = np.array([1,2,3])
arr2 = np.array([4,5,6])
arr = np.hstack((arr1,arr2))
print(arr)

import numpy as np

arr1 = np.array([1,2,3])
arr2 = np.array([4,5,6])
arr = np.vstack((arr1,arr2))
print(arr)

import numpy as np

arr1 = np.array([1,2,3])
arr2 = np.array([4,5,6])
arr = np.dstack((arr1,arr2))
print(arr)

import numpy as np
arr = np.array([1,2,3,4,5,6])
newarr = np.array_split(arr,3)

print(newarr[0])
print(newarr[1])
print(newarr[2])

import numpy as np
arr = np.array([[1,2],[3,4],[5,6],[7,8],[9,10],[11,12]])
newarr = np.array_split(arr,3)
print(newarr)

import numpy as np

arr = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9], [10, 11, 12], [13, 14, 15], [16, 17, 18]])

newarr = np.array_split(arr, 3, axis=1)

print(newarr) 
